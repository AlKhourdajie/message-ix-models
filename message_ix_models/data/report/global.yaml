# Configuration for reporting of the MESSAGEix-GLOBIOM global model
#
# Some groups in this file ('units', 'files', 'alias') are used by the
# ixmp.reporting and message_ix.reporting built-in configuration code. See:
#
# https://message.iiasa.ac.at/en/latest/reporting.html#ixmp.reporting.configure
# https://message.iiasa.ac.at/en/latest/
#   reporting.html#ixmp.reporting.Reporter.configure
#
# Others are used in reporting.core.prepare_reporter.
#
#
# EDITING
#
# - Wrap lines at 80 characters.


units:
  # Unit definitions are loaded from data/units == IAMconsortium/units; only
  # add units here which are idiosyncrasies of MESSAGEix-GLOBIOM.
  # define: |
  #   USD = [value]
  replace:
    '???': ''
    '-': ''
  apply:
    GDP: billion USD_2005 / year
    PRICE_COMMODITY: USD_2010 / kWa
    # FIXME 'carbon' is not a unit; these should be t, kt, Mt or similar
    PRICE_EMISSION: USD_2005 / carbon
    tax_emission: USD_2005 / carbon
    # Temporary: requires changes in iiasa/message_data#115
    emission_factor: 'Mt / year'


# Filters
#
# These limit the data that is retrieved from the backend by ixmp.reporting;
# so ALL quantities in the Reporter are limited to these values. Use these for
# debugging.

# filters:
#   t: [coal_ppl, po_turbine, c_ppl_co2scr]


# Aggregate across dimensions of single quantities
#
# - Corresponds to ixmp.Reporter.aggregate via reporting.core.add_aggregate
# - The dimension `_dim` is not removed; it gains new labels that are the sum
#   of the listed members. Basically regrouping over one dimension.
aggregate:
  # Quantities to aggregate
- _quantities: [in, out]
  # Added to the end of the each key (e.g. '[key]:pe' or '[key]:[tag]+pe')
  _tag: pe
  # Dimension along which to aggregate
  _dim: t

  # Mappings from group names to members along _dim
  # Coal
  coal: [coal_extr, coal_extr_ch4]
  lignite: [lignite_extr]
  gas conventional: [gas_extr_1, gas_extr_2, gas_extr_3, gas_extr_4]
  gas unconventional: [gas_extr_5, gas_extr_6, gas_extr_7, gas_extr_8]
  oil conventional: [oil_extr_1_ch4, oil_extr_2_ch4, oil_extr_3_ch4,
                     oil_extr_1, oil_extr_2, oil_extr_3]
  oil unconventional: [oil_extr_4_ch4, oil_extr_4, oil_extr_5, oil_extr_6,
                       oil_extr_7, oil_extr_8]

- _quantities: [in, out]
  _tag: se
  _dim: t

  # Biomass
  bio elec wo ccs: [bio_ppl, bio_istig]
  bio elec w ccs: [bio_isitig_ccs]
  bio eth wo ccs: [eth_bio, liq_bio]
  bio eth w ccs: [eth_bio_ccs, liq_bio_ccs]
  bio hydrogen wo ccs: [h2_bio]
  bio hydrogen w ccs: [h2_bio_ccs]

  # Coal
  coal elec wo ccs: [coal_ppl, igcc, coal_adv]
  coal elec w ccs: [igcc_ccs, coal_adv_ccs]
  coal heat: [coal_hpl]
  coal hydrogen wo ccs: [h2_coal_ccs]
  coal loil wo ccs: [syn_liq]
  coal loil w ccs: [syn_liq_ccs]
  coal methanol wo ccs: [coal_meth]
  coal methanol w ccs: [coal_meth_ccs]

  # Gas
  gas elec wo ccs: [gas_ct, gas_cc, gas_ppl, gas_htfc]
  gas elec w ccs: [gas_cc_ccs]
  gas heat wo ccs: [gas_hpl]
  gas hydrogen wo ccs: [h2_smr]
  gas hydrogen w ccs: [h2_smr_ccs]

  # Geothermal
  geothermal elec: [geo_ppl]
  geothermal heat: [geo_hpl]

  # Hydro
  hydro: [hydro_hc, hydro_lc]

  # Nuclear
  nuclear: [nuc_lc, nuc_hc, nuc_fbr]

  # Oil
  oil elec wo ccs: [foil_ppl, loil_ppl, oil_ppl, loil_cc]
  oil heat: [foil_hpl]

  # Wind
  wind curtailment: [wind_curtailment1, wind_curtailment2, wind_curtailment3]
  wind gen onshore: [wind_res1, wind_res2, wind_res3, wind_res4]
  wind gen offshore: [wind_ref1, wind_ref2, wind_ref3, wind_ref4, wind_ref5]

  # Solar
  solar pv gen elec: [solar_res1, solar_res2, solar_res3, solar_res4,
                      solar_res5, solar_res6, solar_res7, solar_res8]
  solar pv gen elec RC: [solar_pv_RC]
  solar pv gen elec I: [solar_pv_I]
  solar pv curtailment: [solar_curtailment1, solar_curtailment2,
                         solar_curtailment3]
  solar csp gen elec sm1: [csp_sm1_res, csp_sm1_res1, csp_sm1_res2,
                           csp_sm1_res3, csp_sm1_res4, csp_sm1_res5,
                           csp_sm1_res6, csp_sm1_res7]
  solar csp gen elec sm3: [csp_sm3_res, csp_sm3_res1, csp_sm3_res2,
                           csp_sm3_res3, csp_sm3_res4, csp_sm3_res5,
                           csp_sm3_res6, csp_sm3_res7]
  solar csp gen heat rc: [solar_rc]
  solar csp gen heat i: [solar_i]

# Emissions of CH4
- _quantities: [emi]
  _tag: CH4_0
  _dim: t

  Waste: [CH4_WasteBurnEM, CH4_DomWasteWa, CH4_IndWasteWa, CH4n_landfills,
    landfill_digester1, landfill_compost1, landfill_mechbio, landfill_heatprdn,
    landfill_direct1, landfill_ele, landfill_flaring]
  Industrial Processes: [CH4_IndNonEnergyEM]
  AFOLU|Biomass Burning: [CH4_AgWasteEM]
  Heat: [bio_hpl, coal_hpl, foil_hpl, gas_hpl]
  Electricity: [bio_istig, bio_ppl, coal_adv, coal_ppl_u, igcc, coal_ppl,
    foil_ppl, gas_cc, gas_ppl, loil_cc, loil_ppl, oil_ppl, SO2_scrub_ppl,
    coal_adv_ccs, igcc_ccs, gas_cc_ccs, gas_ct, gas_htfc, bio_istig_ccs]

  # Fugitive - gas
  Gases|Extraction: [gas_extr_1, gas_extr_2, gas_extr_3, gas_extr_4, gas_extr_5,
    gas_extr_6, gas_extr_7, gas_extr_8, flaring_CO2]
  Gases|Transportation: [gas_t_d_ch4, gas_t_d]
  Gases|Coal: [coal_gas]
  Gases|Hydrogen: [h2_smr, h2_smr_ccs, h2_coal, h2_coal_ccs, h2_bio, h2_bio_ccs]

  # Fugitive - liquid
  Liquids|Extraction: [oil_extr_1_ch4, oil_extr_1, oil_extr_2_ch4, oil_extr_2,
    oil_extr_3_ch4, oil_extr_3, oil_extr_4_ch4, oil_extr_4, oil_extr_5,
    oil_extr_6, oil_extr_7, oil_extr_8]
  Liquids|Transportation: [loil_t_d, foil_t_d, meth_t_d, eth_t_d]
  Liquids|Oil: [ref_lol, ref_hil, SO2_scrub_ref]
  Liquids|Natural Gas: [meth_ng, meth_ng_ccs]
  Liquids|Coal: [meth_coal, meth_coal_ccs, syn_liq, syn_liq_ccs]
  Liquids|Biomass: [eth_bio, eth_bio_ccs, liq_bio, liq_bio_ccs]

  # Fugitive - solid
  Solids|Extraction: [coal_extr_ch4, coal_extr, lignite_extr]
  Solids|Transportation: [coal_t_d, biomass_t_d]

  # Demand
  CH4 rescomm: [sp_el_RC, solar_pv_RC, h2_fc_RC, coal_rc, foil_rc, loil_rc,
    gas_rc, elec_rc, biomass_rc, heat_rc, meth_rc, eth_rc, h2_rc, hp_el_rc,
    hp_gas_rc, solar_rc, biomass_nc, other_sc]
  CH4 transport: [coal_trp, foil_trp, loil_trp, gas_trp, elec_trp, meth_ic_trp,
    eth_ic_trp, meth_fc_trp, eth_fc_trp, h2_fc_trp]

# Second stage of CH4 aggregation
- _quantities: [emi::CH4_0]
  _tag: '1'
  _dim: t

  Fugitive: [Gases|Extraction, Gases|Transportation, Gases|Coal, Gases|Hydrogen, Liquids|Extraction, Liquids|Transportation, Liquids|Oil, Liquids|Gas, Liquids|Coal, Liquids|Biomass, Solids|Extraction, Solids|Transportation]

# Third stage of CH4 aggregation
- _quantities: [emi::CH4_0+1]
  _tag: '2'
  _dim: e

  CH4: [CH4_Emission, CH4_nonenergy, CH4_new_Emission, CH4_Emission_bunkers]

- _quantities: [in, out]
  _tag: t_d
  _dim: t

  biomass: [biomass_t_d]
  coal: [coal_t_d-rc-06p, coal_t_d-in-06p, coal_t_d-in-SO2, coal_t_d-rc-SO2,
         coal_t_d]
  elec: [elec_t_d]
  gas: [gas_t_d, gas_t_d_ch4]
  heat: [heat_t_d]
  oil: [loil_t_d, foil_t_d]

- _quantities: [in, out]
  _tag: bunker
  _dim: t

  methanol: [methanol_bunker]
  gas: [LNG_bunker]
  lh2: [LH2_bunker]
  oil: [loil_bunker, foil_bunker]

- _quantities: [in, out]
  _tag: import
  _dim: t

  coal: [coal_imp]
  elec: [elec_imp]
  ethanol: [eth_imp]
  gas: [LNG_imp, gas_imp]
  lh2: [lh2_imp]
  methanol: [meth_imp]
  oil: [oil_imp, loil_imp, foil_imp]

- _quantities: [in, out]
  _tag: export
  _dim: t

  coal: [coal_exp]
  elec: [elec_exp]
  ethanol: [eth_exp]
  lh2: [lh2_exp]
  gas: [LNG_exp, gas_exp_nam, gas_exp_weu, gas_exp_eeu, gas_exp_pao,
        gas_exp_cpa, gas_exp_afr, gas_exp_sas, gas_exp_pas]
  methanol: [meth_exp]
  oil: [oil_exp, loil_exp, foil_exp]


# Create new quantities by weighted sum across multiple quantities
# - Parsed by reporting.core.add_combination
combine:
  # Name and dimensions of quantity to be created
- key: coal:nl-ya
  # Inputs to sum
  inputs:
    # Input quantity. If dimensions are none ('name::tag') then the necessary
    # dimensions are inferred: the union of the dimensions of 'key:' above,
    # plus any dimensions appearing in 'select:''
  - quantity: in::pe  # e.g. 'in:nl-t-ya:pe' is inferred
    # Values to select
    select: {t: [coal, lignite]}
    # Weight for these values in the weighted sum
  - quantity: in::import
    select: {t: coal}
  - quantity: in::export
    select: {t: coal}
    weight: -1
  # commented (PNK 2019-10-07): doesn't exist
  # - quantity: in::bunker
  #   select: {t: coal}

- key: gas:nl-ya
  inputs:
  - quantity: in::pe
    select: {t: ['gas conventional', 'gas unconventional']}
  - quantity: in::import
    select: {t: gas}
  - quantity: in::export
    select: {t: gas}
    weight: -1
  - quantity: in::bunker
    select: {t: gas}

- key: oil:nl-ya
  inputs:
  - quantity: in::pe
    select: {t: ['oil conventional', 'oil unconventional']}
  - quantity: in::import
    select: {t: oil}
  - quantity: in::export
    select: {t: oil}
  - quantity: in::bunker
    select: {t: oil}
    weight: 1

- key: solar:nl-ya
  inputs:
  - quantity: out::se
    select: {t: ['solar pv gen elec', 'solar pv gen elec RC',
                 'solar pv gen elec I', 'solar csp gen elec sm1',
                 'solar csp gen elec sm3', 'solar csp gen heat rc',
                 'solar csp gen heat i']}
            #, c: [electr]}
  - quantity: in::se
    select: {t: solar pv curtailment} #, c: [electr]}
    weight: -1

- key: se_trade:nl-ya
  inputs:
  - quantity: out::import
    select: {t: [elec, ethanol, lh2, methanol]}
  - quantity: in::export
    select: {t: [elec, ethanol, lh2, methanol]}
    weight: -1

- key: wind:nl-ya
  inputs:
  - quantity: out::se
    select: {t: ['wind gen onshore', 'wind gen offshore']}
  - quantity: in::se
    select: {t: wind curtailment}
    weight: -1

# Emissions

# CH4 emissions from GLOBIOM: apply a factor of 0.025 to land_out
# TODO document why this is needed
- key: land_out:n-s-y-c:CH4_0+1+2
  inputs:
  - quantity: land_out::CH4_0+1
    weight: 0.025

# Prices

- key: price_carbon:n-y
  # TODO PRICE_EMISSION has dimension "y", tax_emission has dimension
  #      "type_year". Implement a dimension rename so that the two can be
  #      combined in this way.
  inputs:
  - quantity: PRICE_EMISSION
    select: {type_emission: [TCE], type_tec: [all]}
  # - quantity: tax_emission
  #   select: {type_emission: [TCE], type_tec: [all]}

# Commodity price minus emission price
# NB This is only for illustration.
# TODO use emission factor must be used to convert the following to compatible
#      units:
# - PRICE_COMMODITY with (c, l) dimensions and units [currency] / [energy]
# - 'price emission' with (e, t) dimensions and units [currency] / [mass]
- key: price ex carbon:n-t-y-c-l-e
  inputs:
  - quantity: PRICE_COMMODITY:n-c-l-y
  - quantity: price emission:n-e-t-y
    weight: -1

# TODO remove these entries once the one-step conversion is checked.
# - The following entries subset the components of PRICE_COMMODITY used in the
#   legacy reporting. The preferred method is to convert the entire variable to
#   IAMC format in one step; see below in the "iamc:" section.
# - l: [import] is sometimes included to pick up prices at the global node(s).
# - In general, PRICE_COMMODITY has data for n=GLB and level=import OR for
#   other nodes and l=primary or secondary—but not otherwise.
- key: price_c:n-y-h
  inputs:
  - quantity: PRICE_COMMODITY
    select: {c: [coal], l: [primary, import]}
- key: price_g_w:n-y-h
  # Only includes 11 regions; no data for c="gas" for global regions, instead
  # c="LNG" is used. The name "LNG" is replaced later.
  inputs:
  - quantity: PRICE_COMMODITY
    select: {c: [gas], l: [primary]}
- key: price_o_w:n-y-h
  # l="import" is used for the global region.
  inputs:
  - quantity: PRICE_COMMODITY
    select: {c: [crudeoil], l: [primary, import]}
- key: price_b_w:n-y-h
  inputs:
  - quantity: PRICE_COMMODITY
    select: {c: [biomass], l: [primary]}
- key: price_e_w:n-y-h
  inputs:
  - quantity: PRICE_COMMODITY
    select: {c: [electr], l: [secondary]}
- key: price_h_w:n-y-h
  # For the global region: l="import", c="l2h".
  inputs:
  - quantity: PRICE_COMMODITY
    select: {c: [hydrogen], l: [secondary]}
- key: price_liq_o_w:n-y-h
  # l="import" is used for the global region.
  inputs:
  - quantity: PRICE_COMMODITY
    select: {c: [lightoil], l: [secondary, import]}
- key: price_liq_b_w:n-y-h
  # l="import" is used for the global region.
  inputs:
  - quantity: PRICE_COMMODITY
    select: {c: [ethanol], l: [secondary, import]}
- key: price_final_e:n-y-h
  inputs:
  - quantity: PRICE_COMMODITY
    select: {c: [electr], l: [final]}
- key: price_final_sol_c:n-y-h
  inputs:
  - quantity: PRICE_COMMODITY
    select: {c: [coal], l: [final]}
- key: price_final_sol_b:n-y-h
  inputs:
  - quantity: PRICE_COMMODITY
    select: {c: [biomass], l: [final]}
- key: price_final_liq_o:n-y-h
  inputs:
  - quantity: PRICE_COMMODITY
    select: {c: [lightoil], l: [final]}
- key: price_final_liq_b:n-y-h
  inputs:
  - quantity: PRICE_COMMODITY
    select: {c: [ethanol], l: [final]}
- key: price_final_gas:n-y-h
  inputs:
  - quantity: PRICE_COMMODITY
    select: {c: [gas], l: [final]}
# TODO complete or replace this
# - key: land_out:n-s-y-h
#   inputs:
#   - quantity: land_output
#     select:
#       l: [land_use_reporting]
#       c: ["Price|Agriculture|Non-Energy Crops and Livestock|Index"]


general:
- key: gdp_ppp
  comp: product
  inputs:
  - GDP
  - MERtoPPP

# CH4 emissions from GLOBIOM: select only the subset
- key: land_out:n-s-y-c-l-h:CH4_0
  comp: select
  inputs: [land_out]
  args:
    indexers:
      c:
      - Agri_CH4
      - Emissions|CH4|Land Use|Agriculture|Enteric Fermentation
      - Emissions|CH4|Land Use|Agriculture|AWM
      l:
      - land_use_reporting
  sums: true
# Auto-sum over [l, h], apply units
- key: land_out:n-s-y-c:CH4_0+1
  comp: apply_units
  inputs: [land_out:n-s-y-c:CH4_0]
  args:
    units: 'Mt / year'
  sums: true

# - key: wind onshore
#   operation: share_curtailment  # Refers to a method in computations.py
#   inputs: [wind curtailment, wind ref, wind res]
# - key: wind offshore
#   operation: share_curtailment  # Refers to a method in computations.py
#   inputs: [wind curtailment, wind res, wind ref]
# - key: pe test 2
#   comp: concat
#   inputs:
#   - wind
#   - solar


# Groups of keys for re-use. These keys are not parsed by
# reporting.prepare_reporter; they only exist to be referenced further in
# the file.
#
# - Ending a line with '&label' defines a YAML anchor.
# - Using the YAML alias '<<: *label' re-uses the referenced keys.
#
pe_iamc: &pe_iamc
  drop:  # Drop 'commodity', 'level', 'mode', 'node_dest', 'node_origin'
  - c
  - l
  - m
  - nd
  - 'no'  # Bare no is a special YAML value for False, so must quote here.
  - t

price_iamc: &price_iamc
  unit: USD_2010 / GJ
  year_time_dim: y


# Replacements for entire variable name strings
iamc variable names:
  Input|variable|name: Final|variable|name


# This section is used by reporting.core.add_iamc_table()
iamc:

- variable: GDP|MER
  base: GDP:n-y
  unit: billion USD_2010 / year
  year_time_dim: y

- variable: GDP|PPP
  base: gdp_ppp:n-y
  unit: billion USD_2010 / year
  year_time_dim: y

- variable: Primary Energy|Coal
  base: coal:nl-ya
  <<: *pe_iamc

- variable: Primary Energy|Gas
  base: gas:nl-ya
  <<: *pe_iamc

- variable: Primary Energy|Geothermal # This is still incomplete
  base: out:nl-t-ya-m-c-l
  select: {l: [secondary], t: [geothermal elec, geothermal heat]}
  <<: *pe_iamc

- variable: Primary Energy|Hydro
  base: out:nl-t-ya-m-c-l:se
  select: {l: [secondary], t: [hydro]}
  <<: *pe_iamc

- variable: Primary Energy|Nuclear
  base: out:nl-t-ya-m-c-l:se
  select: {l: [secondary], t: [nuclear]}
  <<: *pe_iamc

- variable: Primary Energy|Oil
  base: oil:nl-ya
  <<: *pe_iamc

- variable: Primary Energy|Other
  base: in:nl-t-ya-m-c-l:bunker
  select: {t: [lh2]}
  <<: *pe_iamc

- variable: Primary Energy|Secondary Energy Trade
  base: se_trade:nl-ya
  <<: *pe_iamc

- variable: Primary Energy|Solar
  base: solar:nl-ya
  <<: *pe_iamc

- variable: Primary Energy|Wind
  base: wind:nl-ya
  <<: *pe_iamc

# Emissions

# CH4 emissions from MESSAGE technologies
- variable: Emissions|CH4
  # Auto-sum over dimensions yv, m, h
  base: emi:nl-t-ya:CH4_0+1+2
  var: [t]
  unit: 'Mt / year'  # CH4; the species is indicated by 'variable'
  select:
    t:
    - AFOLU|Biomass Burning
    - CH4 rescomm
    - CH4 transport
    - Electricity
    - Fugitive
    - Gases|Coal
    - Gases|Extraction
    - Gases|Hydrogen
    - Gases|Transportation
    - Heat
    - Industrial Processes
    - Liquids|Biomass
    - Liquids|Coal
    - Liquids|Extraction
    - Liquids|Natural Gas
    - Liquids|Oil
    - Liquids|Transportation
    - Solids|Extraction
    - Solids|Transportation
    - Waste

# CH4 emissions from GLOBIOM
# - The variable name signals utils.collapse to make some replacement, then is
#   removed.
- variable: land_out CH4
  base: land_out:n-s-y-c:CH4_0+1+2
  year_time_dim: y
  var: [c, s]

# Prices
# Preferred method: convert all the contents of the variable at once.
- variable: Price
  base: PRICE_COMMODITY:n-c-l-y
  var: [l, c]
  <<: *price_iamc
- variable: Price|Carbon
  base: price_carbon:n-y
  # FIXME "carbon_dioxide" is not a unit; this should be t, kt, Mt or similar
  unit: USD_2010 / carbon_dioxide
  year_time_dim: y
# commented: see above
# - variable: Price w/o carbon
#   base: price ex carbon:n-t-y-c-e
#   var: [t, c, l, e]
#   year_time_dim: y

# TODO ensure these are covered by the preferred method, above, and then
#      remove these separate conversions.
- variable: Price (legacy)|Primary Energy wo carbon price|Biomass
  base: price_b_w:n-y-h
  <<: *price_iamc
- variable: Price (legacy)|Primary Energy wo carbon price|Coal
  base: price_c:n-y-h
  <<: *price_iamc
- variable: Price (legacy)|Primary Energy wo carbon price|Gas
  base: price_g_w:n-y-h
  <<: *price_iamc
- variable: Price (legacy)|Primary Energy wo carbon price|Oil
  base: price_o_w:n-y-h
  <<: *price_iamc
- variable: Price (legacy)|Secondary Energy wo carbon price|Electricity
  base: price_e_w:n-y-h
  <<: *price_iamc
- variable: Price (legacy)|Secondary Energy wo carbon price|Hydrogen
  base: price_h_w:n-y-h
  <<: *price_iamc
- variable: Price (legacy)|Secondary Energy wo carbon price|Liquids|Biomass
  base: price_liq_b_w:n-y-h
  <<: *price_iamc
- variable: Price (legacy)|Secondary Energy wo carbon price|Liquids|Oil
  base: price_liq_o_w:n-y-h
  <<: *price_iamc
- variable: Price (legacy)|Final Energy wo carbon price|Residential|Electricity
  base: price_final_e:n-y-h
  <<: *price_iamc
- variable: Price (legacy)|Final Energy wo carbon price|Residential|Gases|Natural Gas
  base: price_final_gas:n-y-h
  <<: *price_iamc
- variable: Price (legacy)|Final Energy wo carbon price|Residential|Liquids|Biomass
  base: price_final_liq_b:n-y-h
  <<: *price_iamc
- variable: Price (legacy)|Final Energy wo carbon price|Residential|Liquids|Oil
  base: price_final_liq_o:n-y-h
  <<: *price_iamc
- variable: Price (legacy)|Final Energy wo carbon price|Residential|Solids|Biomass
  base: price_final_sol_b:n-y-h
  <<: *price_iamc
- variable: Price (legacy)|Final Energy wo carbon price|Residential|Solids|Coal
  base: price_final_sol_c:n-y-h
  <<: *price_iamc
#- variable: Price (legacy)|Agriculture|Non-Energy Crops and Livestock|Index
#  base: price_agriculture:n-y-h
#  year_time_dim: y


# This section is used by reporting.core.add_report()
report:
- key: pe test
  members:
#  - Primary Energy|Biomass:iamc
  - Primary Energy|Coal:iamc
  - Primary Energy|Gas:iamc
  - Primary Energy|Hydro:iamc
  - Primary Energy|Nuclear:iamc
  - Primary Energy|Solar:iamc
  - Primary Energy|Wind:iamc

- key: gdp test
  members:
  - GDP|MER:iamc
  - GDP|PPP:iamc

- key: CH4 emissions
  members:
  - Emissions|CH4:iamc
  - land_out CH4:iamc
  # - Emissions|CH4|Fossil Fuels and Industry:iamc
  # - Emissions|CH4|Energy|Supply|Gases|Biomass|Fugitive:iamc
  # - Emissions|CH4|Energy|Supply|Gases|Natural Gas|Fugitive:iamc
  # - Emissions|CH4|Energy|Supply|Solids|Biomass|Fugitive:iamc
  # - Emissions|CH4|Energy|Supply|Solids|Coal|Fugitive:iamc

- key: price test
  members:
  - Price:iamc
  - Price|Carbon:iamc
  # commented: see above
  # - Price w/o carbon:iamc

  # TODO ensure these are covered by the preferred method, above, then remove
  #      these
  - Price (legacy)|Primary Energy wo carbon price|Biomass:iamc
  - Price (legacy)|Primary Energy wo carbon price|Coal:iamc
  - Price (legacy)|Primary Energy wo carbon price|Gas:iamc
  - Price (legacy)|Primary Energy wo carbon price|Oil:iamc
  - Price (legacy)|Secondary Energy wo carbon price|Electricity:iamc
  - Price (legacy)|Secondary Energy wo carbon price|Hydrogen:iamc
  - Price (legacy)|Secondary Energy wo carbon price|Liquids|Biomass:iamc
  - Price (legacy)|Secondary Energy wo carbon price|Liquids|Oil:iamc
  # NB for "Price|Secondary Energy|Liquids|Oil", the legacy reporting inserts a
  #    zero matrix.
  - Price (legacy)|Final Energy wo carbon price|Residential|Electricity:iamc
  - Price (legacy)|Final Energy wo carbon price|Residential|Gases|Natural Gas:iamc
  - Price (legacy)|Final Energy wo carbon price|Residential|Liquids|Biomass:iamc
  - Price (legacy)|Final Energy wo carbon price|Residential|Liquids|Oil:iamc
  - Price (legacy)|Final Energy wo carbon price|Residential|Solids|Biomass:iamc
  - Price (legacy)|Final Energy wo carbon price|Residential|Solids|Coal:iamc
